/*
A complete list of SVG properties that can be set through CSS is here:
http://www.w3.org/TR/SVG/styling.html

Important note: Presentation attributes have a lower precedence over CSS style rules.
*/


/* .viewport is a <g> node wrapping all diagram elements in the paper */
.joint-viewport {
   -webkit-user-select: none;
   -moz-user-select: none;
   user-select: none;
}

.joint-paper > svg,
.joint-paper-background,
.joint-paper-grid {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

/*
1. IE can't handle paths without the `d` attribute for bounding box calculation
2. IE can't even handle 'd' attribute as a css selector (e.g path[d]) so the following rule will
   break the links rendering.

path:not([d]) {
    display: none;
}

*/


/* magnet is an element that can be either source or a target of a link */
[magnet=true]:not(.joint-element) {
   cursor: crosshair;
}
[magnet=true]:not(.joint-element):hover {
   opacity: .7;
}

/*

Elements have CSS classes named by their types. E.g. type: basic.Rect has a CSS class "element basic Rect".
This makes it possible to easilly style elements in CSS and have generic CSS rules applying to
the whole group of elements. Each plugin can provide its own stylesheet.

*/

.joint-element {
   /* Give the user a hint that he can drag&drop the element. */
   cursor: move;
}

.joint-element * {
   -webkit-user-drag: none;
}

.joint-element .scalable * {
   /* The default behavior when scaling an element is not to scale the stroke in order to prevent the ugly effect of stroke with different proportions. */
   vector-effect: non-scaling-stroke;
}

/* Paper */
.joint-paper {
    position: relative;
}
/* Paper */


